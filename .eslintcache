[{"C:\\Users\\MIKOLAJ\\supage\\src\\index.js":"1","C:\\Users\\MIKOLAJ\\supage\\src\\App.js":"2","C:\\Users\\MIKOLAJ\\supage\\src\\reportWebVitals.js":"3","C:\\Users\\MIKOLAJ\\supage\\src\\components\\Footer.js":"4","C:\\Users\\MIKOLAJ\\supage\\src\\components\\NavBar.js":"5","C:\\Users\\MIKOLAJ\\supage\\src\\components\\NavBox.js":"6","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\ContactPage.js":"7","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\NewsPage.js":"8","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\HomePage.js":"9","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\AuctionPage.js":"10","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\TournamentPage.js":"11","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\NotFound.js":"12","C:\\Users\\MIKOLAJ\\supage\\src\\FetchingData.ts":"13","C:\\Users\\MIKOLAJ\\supage\\src\\components\\BigCard.js":"14","C:\\Users\\MIKOLAJ\\supage\\src\\components\\TournamentCard.js":"15","C:\\Users\\MIKOLAJ\\supage\\src\\components\\FilterComponent.js":"16","C:\\Users\\MIKOLAJ\\supage\\src\\components\\AddBid.js":"17","C:\\Users\\MIKOLAJ\\supage\\src\\components\\BidCard.js":"18","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\Voting.js":"19","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\commonData.js":"20","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\firebase.js":"21","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\BeforeTime.jsx":"22","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\AfterVoting.jsx":"23","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\BeforeVoting.jsx":"24","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\AfterTime.jsx":"25","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\DuringVoting.jsx":"26"},{"size":507,"mtime":1607891909747,"results":"27","hashOfConfig":"28"},{"size":3301,"mtime":1632921207527,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1605015963311,"results":"30","hashOfConfig":"28"},{"size":375,"mtime":1623699150397,"results":"31","hashOfConfig":"28"},{"size":2153,"mtime":1623698601459,"results":"32","hashOfConfig":"28"},{"size":325,"mtime":1606943304622,"results":"33","hashOfConfig":"28"},{"size":1885,"mtime":1607193828922,"results":"34","hashOfConfig":"28"},{"size":1172,"mtime":1623700337946,"results":"35","hashOfConfig":"28"},{"size":1133,"mtime":1605171339126,"results":"36","hashOfConfig":"28"},{"size":4243,"mtime":1623867334219,"results":"37","hashOfConfig":"28"},{"size":1849,"mtime":1606941472138,"results":"38","hashOfConfig":"28"},{"size":374,"mtime":1606944974747,"results":"39","hashOfConfig":"28"},{"size":121,"mtime":1606943420232,"results":"40","hashOfConfig":"28"},{"size":1910,"mtime":1623850040949,"results":"41","hashOfConfig":"28"},{"size":3238,"mtime":1605376015298,"results":"42","hashOfConfig":"28"},{"size":582,"mtime":1623838373437,"results":"43","hashOfConfig":"28"},{"size":8161,"mtime":1623914285334,"results":"44","hashOfConfig":"28"},{"size":8007,"mtime":1623870688258,"results":"45","hashOfConfig":"28"},{"size":4589,"mtime":1632777162904,"results":"46","hashOfConfig":"28"},{"size":88,"mtime":1632643278584,"results":"47","hashOfConfig":"28"},{"size":1498,"mtime":1632774200366,"results":"48","hashOfConfig":"28"},{"size":1948,"mtime":1632639110204,"results":"49","hashOfConfig":"28"},{"size":2658,"mtime":1632916878336,"results":"50","hashOfConfig":"28"},{"size":4037,"mtime":1632774200355,"results":"51","hashOfConfig":"28"},{"size":1806,"mtime":1632916892483,"results":"52","hashOfConfig":"28"},{"size":14289,"mtime":1632916218002,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"3x6x6p",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},"C:\\Users\\MIKOLAJ\\supage\\src\\index.js",[],["127","128"],"C:\\Users\\MIKOLAJ\\supage\\src\\App.js",["129","130","131","132","133","134"],"import React from 'react';\nimport './styles/App.css';\nimport NavBar from './components/NavBar.js'\nimport Footer from './components/Footer.js'\nimport NewsPage from './screens/NewsPage.js'\nimport HomePage from './screens/HomePage.js'\nimport ContactPage from './screens/ContactPage.js'\nimport TournamentPage from './screens/TournamentPage.js'\nimport NavBox from './components/NavBox.js'\nimport NotFound from './screens/NotFound.js'\nimport AuctionPage from './screens/AuctionPage.js'\nimport Voting from './kill_me/Voting';\n\nimport { useState, useEffect } from 'react';\n\nimport logo from './images/Logo SU sygnet.svg';\nimport logotype from './images/logotyp su.svg'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\n\n\nconst NavBareczek = () => {\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav-logo\">\n        <img src={logo} className=\"su-logo\" />\n        <img src={logotype} className=\"su-logotype\" />\n      </div>\n      <div className=\"nav-scroll\">\n        <NavStyledBox label={\"Strona Główna\"} to={\"/\"} activeOnlyWhenExact={true} />\n        <NavStyledBox label={\"Aktualności\"} to={\"/news\"} />\n        <NavStyledBox label={\"Kiermasz\"} to={\"/kiermasz\"} />\n        <NavStyledBox label={\"Głosowanie\"} to={\"/glosowanie\"} />\n        {/* <NavStyledBox label={\"Aukcje\"} to={\"/auctions\"} /> */}\n        <NavStyledBox label={\"Kontakt\"} to={\"/contact\"} />\n      </div>\n    </div>\n  );\n}\n\n\nexport default function App() {\n\n  return (\n    <Router>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <NavBareczek />\n            <div className='perma-spacer' />\n            <HomePage />\n            <div className='perma-spacer' />\n            <Footer bottom={false} />\n          </Route>\n          <Route path=\"/news\">\n            <NavBareczek />\n            <div className='perma-spacer' />\n            <NewsPage />\n            <div className='perma-spacer' />\n            <Footer bottom={true} />\n          </Route>\n          <Route path=\"/glosowanie\">\n            <Voting />\n          </Route>\n          <Route path=\"/kiermasz\">\n            <NavBareczek />\n            <div className='perma-spacer' />\n            <AuctionPage />\n            <div className='perma-spacer' />\n          </Route>\n          <Route path=\"/contact\">\n            <NavBareczek />\n            <div className='perma-spacer' />\n            <ContactPage />\n            <div className='perma-spacer' />\n            <Footer bottom={false} />\n          </Route>\n          {/* <Route path=\"/auctions\">\n            <div className='perma-spacer' />\n            <AuctionPage />\n            <div className='perma-spacer' />\n            <Footer />\n          </Route> */}\n          <Route path=\"*\">\n            <NavBareczek />\n            <div className='perma-spacer' />\n            <NotFound />\n            <div className='perma-spacer' />\n            <Footer bottom={false} />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nfunction NavStyledBox({ label, to, activeOnlyWhenExact }) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n\n  let color = match ? { color: \"#f58f0b\" } : { color: \"#333333\" };\n\n  return (\n    <Link to={to}><NavBox text={label} color={color} /></Link>\n  );\n}","C:\\Users\\MIKOLAJ\\supage\\src\\reportWebVitals.js",[],"C:\\Users\\MIKOLAJ\\supage\\src\\components\\Footer.js",[],"C:\\Users\\MIKOLAJ\\supage\\src\\components\\NavBar.js",["135","136"],"import React from 'react'\r\nimport '../styles/App.css';\r\nimport logo from '../images/Logo SU sygnet.svg';\r\nimport logotype from '../images/logotyp su.svg'\r\n\r\nexport default class NavBar extends React.Component {\r\n\r\n    changeStyle = (input) => {\r\n        if (input === this.props.currentPage)\r\n            return { color: \"#f58f0b\" }\r\n        else {\r\n            return { color: \"#333333\" }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav-container\" >\r\n                <div className=\"nav-logo\">\r\n                    <img src={logo} className=\"su-logo\" />\r\n                    <img src={logotype} className=\"su-logotype\" />\r\n                </div>\r\n                <div className=\"nav-scroll\">\r\n                    <div className=\"nav-element\">\r\n                        <button type=\"button\" className=\"nav-button\" onClick={() => this.props.selectDestination(\"_HOME_\")}>\r\n                            <p className=\"nav-index\" style={this.changeStyle(\"_HOME_\")}>Strona Główna</p>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"nav-element\">\r\n                        <button className=\"nav-button\" onClick={() => this.props.selectDestination(\"_NEWS_\")}>\r\n                            <p className=\"nav-index\" style={this.changeStyle(\"_NEWS_\")}>Aktualności</p>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"nav-element\">\r\n                        <button className=\"nav-button\" onClick={() => this.props.selectDestination(\"_TOURNAMENT_\")}>\r\n                            <p className=\"nav-index\" style={this.changeStyle(\"_TOURNAMENT_\")}>Kiermasz</p>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"nav-element\">\r\n                        <button className=\"nav-button\" onClick={() => this.props.selectDestination(\"_CONTACT_\")}>\r\n                            <p className=\"nav-index\" style={this.changeStyle(\"_CONTACT_\")}>Kontakt</p>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\components\\NavBox.js",[],"C:\\Users\\MIKOLAJ\\supage\\src\\screens\\ContactPage.js",["137","138","139","140","141","142","143"],"import image from \"../images/contactpagegraphic.svg\"\r\nimport discordIcon from \"../images/discord.svg\"\r\nimport facebookIcon from \"../images/facebook.svg\"\r\nimport gmailIcon from \"../images/gmail.svg\"\r\n\r\nexport default function ContactPage() {\r\n    return (\r\n        <div className=\"contactPage-container\">\r\n            <div className=\"contactPage-image-container\">\r\n                <img src={image} className=\"contactPage-image\" />\r\n            </div>\r\n            <div className=\"contactPage-text-container\">\r\n                <h2 className=\"contactPage-text-header\">Skontaktuj się z nami poprzez:</h2>\r\n                <div className=\"icons\">\r\n                    <a style={{ textDecoration: \"none\" }} target=\"_blank\" href=\"https://www.facebook.com/SUILOGliwice\">\r\n                        <div className=\"icons-container\">\r\n                            <img src={facebookIcon} className=\"fb-icon\" />\r\n                            <p className=\"link\">Facebook</p>\r\n                        </div>\r\n                    </a>\r\n                    <a style={{ textDecoration: \"none\" }} target=\"_blank\" href={\"https://discord.gg/upPdWMc8GJ\"}>\r\n                        <div className=\"icons-container\">\r\n                            <img src={discordIcon} className=\"dc-icon\" />\r\n                            <p className=\"link dc\">Discord</p>\r\n                        </div>\r\n                    </a>\r\n                    <a style={{ textDecoration: \"none\" }} target=\"_blank\" href=\"mailto: su.lo1.gliwice@gmail.com\" onClick={() => alert(\"mail: su.lo1.gliwice@gmail.com\")}>\r\n                        <div className=\"icons-container\">\r\n                            <img src={gmailIcon} className=\"gm-icon\" />\r\n                            <p className=\"link gm\">eMail</p>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\NewsPage.js",[],"C:\\Users\\MIKOLAJ\\supage\\src\\screens\\HomePage.js",["144"],"import image1 from \"../images/homepagegraphic1.svg\"\r\nimport image2 from \"../images/homepagegraphic2.svg\"\r\nimport image3 from \"../images/homepagegraphic3.svg\"\r\n\r\nexport default function HomePage() {\r\n    const randomIntegerMod3 = (Math.floor(Math.random() * Math.floor(999))) % 3;\r\n    let image;\r\n\r\n    switch (randomIntegerMod3) {\r\n        case (0):\r\n            image = image1;\r\n            break;\r\n        case (1):\r\n            image = image2;\r\n            break;\r\n        case (2):\r\n            image = image3;\r\n            break;\r\n        default:\r\n            image = image1;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"homePage-container\">\r\n            <div className=\"homePage-image-container\">\r\n                <img src={image} className=\"homePage-image\" />\r\n            </div>\r\n            <div className=\"homePage-text-container\">\r\n                <h2 className=\"homePage-text-left\">Od uczniów,</h2>\r\n                <h2 className=\"homePage-text-right\"> dla uczniów</h2>\r\n                <h2 className=\"homePage-text-small\">SU I LO w Gliwicach</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\AuctionPage.js",["145"],"import React, { useState, useEffect } from \"react\";\r\nimport Loader from 'react-loader-spinner'\r\nimport BidCard from \"../components/BidCard\";\r\nimport { fetchJSON } from \"../FetchingData\";\r\nimport FilterComponent from \"../components/FilterComponent\";\r\nimport Footer from \"../components/Footer\";\r\nimport AddBid from \"../components/AddBid\";\r\n\r\nexport default function AuctionPage() {\r\n    const [filter, setFilter] = useState([])\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [allBids, setAllBids] = useState(null);\r\n    const [visibleBids, setVisibleBids] = useState(null);\r\n\r\n    const fetchBids = () => {\r\n        fetchJSON(\"https://api.jsonbin.io/b/60ca2f468ea8ec25bd0e4f89/latest\").then((res) => {\r\n            setAllBids(res);\r\n            setLoaded(true);\r\n        })\r\n    }\r\n\r\n    const generateBids = (filtr) => {\r\n        return allBids.map((el, i) => <BidCard key={el.id} elementData={el} idx={i} filter={filtr} bids={allBids} />)\r\n    }\r\n\r\n    const changeFilter = (label, action) => {\r\n        let foo = filter;\r\n        if (action === \"RESET\") {\r\n            foo = [];\r\n        }\r\n        else if (action === \"ON\") {\r\n            foo.push(label)\r\n        }\r\n        else {\r\n            for (let i = 0; i < foo.length; i++) {\r\n                if (foo[i] === label) {\r\n                    foo.splice(i, 1)\r\n                }\r\n            }\r\n        }\r\n        setFilter(foo)\r\n        setVisibleBids(generateBids(foo))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (allBids === null) {\r\n            fetchBids();\r\n        } else {\r\n            setVisibleBids(generateBids(filter))\r\n        }\r\n    }, [filter, allBids])\r\n\r\n    if (loaded) {\r\n        return (\r\n            <div className=\"auction-page\">\r\n                <div className=\"control-row\">\r\n                    <div className=\"sort\">\r\n                        <FilterComponent label=\"matematyka\" action={changeFilter} />\r\n                        <FilterComponent label=\"chemia\" action={changeFilter} />\r\n                        <FilterComponent label=\"informatyka\" action={changeFilter} />\r\n                        <FilterComponent label=\"biologia\" action={changeFilter} />\r\n                        <FilterComponent label=\"fizyka\" action={changeFilter} />\r\n                        <FilterComponent label=\"geografia\" action={changeFilter} />\r\n                        <FilterComponent label=\"historia\" action={changeFilter} />\r\n                        <FilterComponent label=\"angielski\" action={changeFilter} />\r\n                        <FilterComponent label=\"francuski\" action={changeFilter} />\r\n                        <FilterComponent label=\"niemiecki\" action={changeFilter} />\r\n                        <FilterComponent label=\"hiszpański\" action={changeFilter} />\r\n                        <FilterComponent label=\"polski\" action={changeFilter} />\r\n                        <FilterComponent label=\"inne\" action={changeFilter} />\r\n                    </div>\r\n                    <div className=\"add-bid\">\r\n                        <AddBid bids={allBids} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"bids\">\r\n                    {visibleBids}\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", transform: \"translateY(30px)\" }}>\r\n                    <p\r\n                        style={{\r\n                            fontFamily: \"poppins\",\r\n                            color: \"grey\",\r\n                            fontSize: \"20px\",\r\n                            fontWeight: \"500\",\r\n                            letterSpacing: \"0.03em\",\r\n                            opacity: \".7\"\r\n                        }}\r\n                    >\r\n                        To wszystko...\r\n                    </p>\r\n                </div>\r\n                {/* <div style={{ marginBottom: \"-70px\" }}>\r\n                    <Footer bottom={true} />\r\n                </div> */}\r\n\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div className=\"loader-position\">\r\n            <div className=\"loader-absolute\">\r\n                <Loader type=\"Bars\" color=\"#f58f0b\" height={50} width={50} />\r\n            </div>\r\n            <Footer bottom={false} />\r\n        </div>);\r\n    }\r\n\r\n}\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\TournamentPage.js",["146","147"],"import React, { useState } from 'react';\r\nimport image from \"../images/trophy.svg\"\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport TournamentCard from \"../components/TournamentCard.js\";\r\nimport { fetchJSON } from \"../FetchingData.ts\"\r\n\r\nconst generateCard = (json) => {\r\n    return json.map((el, i) => <TournamentCard elementData={el} i={i} />)\r\n}\r\n\r\n\r\nexport default function TournamentPage() {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [tournament, setTournaments] = useState(\"\");\r\n    if (loaded) {\r\n        return (\r\n            <div className=\"tournamentPage-container\">\r\n                <div className=\"tournamentPage-left\">\r\n                    <div className=\"tournament-list\">\r\n                        {generateCard(tournament)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"tournamentPage-right\">\r\n                    <img src={image} className=\"trophy-image\" />\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n    else {\r\n        fetchJSON(\"https://api.npoint.io/ffeaad501c895f679167\").then((res) => {\r\n            setTournaments(res);\r\n            setLoaded(true);\r\n        })\r\n        return (\r\n            <div className=\"tournamentPage-container\">\r\n                <div className=\"tournamentPage-left\">\r\n                    <div className=\"tournament-list\">\r\n                        <div className=\"tournament-loader\">\r\n                            <Loader type=\"Bars\" color=\"#f58f0b\" height={50} width={50} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tournamentPage-right\">\r\n                    <img src={image} className=\"trophy-image\" />\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\screens\\NotFound.js",["148"],"import React from 'react';\r\nimport image from '../images/pagenotfound.svg'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div className=\"ntfound-container\">\r\n            <div className=\"img-container\">\r\n                <img src={image} />\r\n                <p>Ups... Strona której szukasz nie istnieje.</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\FetchingData.ts",[],["149","150"],"C:\\Users\\MIKOLAJ\\supage\\src\\components\\BigCard.js",["151","152","153","154","155"],"import '../styles/App.css';\r\nimport react, { useState } from \"react\";\r\nimport placeholder from \"../images/placeholder.jpg\";\r\n\r\nexport default function BigCard(props) {\r\n    const elementData = props;\r\n    const { image, title, date, content, link } = elementData.elementData;\r\n    const [style, setStyle] = useState(\"none\");\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    let linkage = <div />;\r\n    let imagee;\r\n    if (image === \"none\") {\r\n        imagee = placeholder;\r\n    } else {\r\n        imagee = image;\r\n    }\r\n\r\n    if (link !== \"none\" & link !== \"\" & link !== \" \") {\r\n        linkage = <a target=\"_blank\" href={link}>odwiedź witrynę</a>\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"spotlight-container\">\r\n                {loaded ? null : <img src={placeholder} className=\"spotlight\" loading=\"lazy\" />}\r\n                <img src={imagee} className=\"spotlight\" style={loaded ? {} : { display: 'none' }} onLoad={() => setLoaded(true)} />\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <p>{date}</p>\r\n                <div className=\"header\">\r\n                    <h3 title={title}>{title}</h3>\r\n                </div>\r\n                <div className=\"watch\">\r\n                    <button onClick={() => setStyle(\"flex\")}>zobacz</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"post-container\" style={{ display: style }}>\r\n                <article>\r\n                    <img src={imagee} />\r\n                    <div className=\"article\">\r\n                        <h1>{title}</h1>\r\n                        <p className=\"date\">{date}</p>\r\n                        <p>{content}</p>\r\n                        {linkage}\r\n                    </div>\r\n                    <button onClick={() => setStyle(\"none\")}>wróć</button>\r\n                </article>\r\n            </div>\r\n        </div >\r\n    );\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\components\\TournamentCard.js",["156","157","158","159"],"import \"../styles/App.css\"\r\nimport placeholder from \"../images/placeholder.jpg\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TournamentCard(props) {\r\n    const [visible, setVisible] = useState(\"none\");\r\n    const elementData = props;\r\n    const { tournamentName, gameTitle, endOfSigningIn, numberOfContestants, stateOfTournament, graphicURL, formURL, rules } = elementData.elementData;\r\n    let color;\r\n    let button;\r\n    let image;\r\n    let url;\r\n\r\n    if (formURL === \"none\") {\r\n        url = \"https://forms.gle/XY4bWVuecYfVzSnw5\";\r\n    } else {\r\n        url = formURL;\r\n    }\r\n\r\n    if (graphicURL === \"none\") {\r\n        image = placeholder;\r\n    } else {\r\n        image = graphicURL;\r\n    }\r\n\r\n\r\n    switch (stateOfTournament.toLowerCase()) {\r\n        case (\"zapisy\"):\r\n            color = { color: \"green\", opacity: \"1\" };\r\n            button = { backgroundColor: \"#f59314\" }\r\n            break;\r\n        case (\"oczekuje\"):\r\n            color = { color: \"grey\", opacity: \".7\" };\r\n            button = { backgroundColor: \"#f59314\" }\r\n            break;\r\n        case (\"trwa\"):\r\n            color = { color: \"red\", opacity: \"1\" };\r\n            button = { backgroundColor: \"#f59314\" }\r\n            break;\r\n        case (\"rozpoczynanie\"):\r\n            color = { color: \"orange\", opacity: \"1\" }\r\n            button = { backgroundColor: \"#f59314\" }\r\n            break;\r\n        default:\r\n            color = { color: \"#333333\" };\r\n            button = { backgroundColor: \"#f59314\" }\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"tournament-card\">\r\n            <div className=\"info\">\r\n                <h2>{tournamentName}</h2>\r\n                <div className=\"name-container\">\r\n                    <p className=\"header-indicator\">Gra: </p>\r\n                    <p className=\"content\" style={{ color: \"teal\" }}>{gameTitle}</p>\r\n                </div>\r\n                <div className=\"name-container\">\r\n                    <p className=\"header-indicator\">Koniec Zapisów: </p>\r\n                    <p className=\"content\" style={{ color: \"teal\" }}>{endOfSigningIn}</p>\r\n                </div>\r\n                <div className=\"name-container\">\r\n                    <p className=\"header-indicator\">Liczba uczestników: </p>\r\n                    <p className=\"content\" style={{ color: \"teal\" }}>{numberOfContestants}</p>\r\n                </div>\r\n                <div className=\"name-container\">\r\n                    <p className=\"header-indicator\">Status: </p>\r\n                    <p className=\"content\" style={color}>{stateOfTournament}</p>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"other\">\r\n                <div className=\"game-image\">\r\n                    <img src={image} />\r\n                </div>\r\n\r\n                <div className=\"google-form\">\r\n                    <form className=\"form\" action={rules}>\r\n                        <input className=\"btn\" type=\"submit\" value=\"zasady\" />\r\n                    </form>\r\n                    <form className=\"frm\" action={url}>\r\n                        <input className=\"npt\" type=\"submit\" value=\"zgłoś się\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\components\\FilterComponent.js",["160"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport default function FilterComponent({ label, action }) {\r\n    const [active, setActive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            return action(label, \"ON\")\r\n        } else {\r\n            return action(label, \"OFF\")\r\n        }\r\n    }, [active])\r\n\r\n    return (\r\n        <button onClick={() => setActive(!active)} style={{ backgroundColor: active ? \"#cccccc\" : \"#e3e3e3\" }} className=\"filter-btn\">\r\n            <p>\r\n                {label}\r\n            </p>\r\n        </button>\r\n    );\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\components\\AddBid.js",["161","162","163"],"import React, { useState, useEffect } from 'react';\r\nimport bcrypt from 'bcryptjs'\r\n\r\nexport default function AddBid({ bids }) {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(e.target[0].value)\r\n        const DATE = new Date()\r\n        const ID = `${DATE.getDate()}${DATE.getMonth()}${DATE.getYear()}-${Math.floor(Math.random() * (9999 - 1000) + 1000)}`\r\n        let foo = {};\r\n        for (let i = 0; i < e.target.length - 1; i++) { //-1?\r\n            foo[e.target[i].name] = e.target[i].value;\r\n        }\r\n        foo[\"id\"] = ID;\r\n        const salt = bcrypt.genSaltSync(10);\r\n        foo.password = bcrypt.hashSync(foo.password, salt);\r\n\r\n        const newBids = [foo, ...bids];\r\n        // console.log(newBids);\r\n\r\n        let req = new XMLHttpRequest();\r\n        req.onreadystatechange = () => {\r\n            if (req.readyState == XMLHttpRequest.DONE) {\r\n                // console.log(req.responseText);\r\n            }\r\n        };\r\n        req.open(\"PUT\", \"https://api.jsonbin.io/b/60ca2f468ea8ec25bd0e4f89\", true);\r\n        req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        req.setRequestHeader(\"X-Master-Key\", \"$2b$10$VYoFNtra2PIuna0hMpGDbOgI/YUNCLp7.Itnsabe75rtXjSJ83b7K\");\r\n        req.send(JSON.stringify(newBids));\r\n\r\n        // console.log(foo)\r\n        setVisible(false);\r\n        alert(\"Twoje ogłoszenie zostało wysłane!\");\r\n    };\r\n\r\n    const BidForm = () => {\r\n        return (\r\n            <div className=\"add-box\">\r\n                <div className=\"blackish\" onClick={() => setVisible(false)} />\r\n                <form onSubmit={e => { handleFormSubmit(e); return false; }}>\r\n                    <div className=\"book-part\">\r\n                        <div className=\"form-info\">\r\n                            <div className=\"vertical-line\" />\r\n                            <p className=\"index-form\">INFORMACJE O KSIĄŻCE</p>\r\n                            <div className=\"vertical-line\" />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"tytuł książki\">Tytuł</label>\r\n                            <input type=\"text\" name=\"title\" required maxlength=\"63\" />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"wydawnictwo książki\">Wydawnictwo</label>\r\n                            <input type=\"text\" name=\"publisher\" required maxlength=\"63\" />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"rok wydania\">Rok</label>\r\n                            <input type=\"text\" type=\"number\" name=\"year\" required maxlength=\"4\" placeholder=\"XXXX\" />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"przedmiot\">Przedmiot</label>\r\n                            <select type=\"text\" name=\"subject\" required>\r\n                                <option>biologia</option>\r\n                                <option>chemia</option>\r\n                                <option>matematyka</option>\r\n                                <option>fizyka</option>\r\n                                <option>informatyka</option>\r\n                                <option>angielski</option>\r\n                                <option>francuski</option>\r\n                                <option>hiszpański</option>\r\n                                <option>niemiecki</option>\r\n                                <option>polski</option>\r\n                                <option>historia</option>\r\n                                <option>geografia</option>\r\n                                <option>informatyka</option>\r\n                                <option>inne</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"klasa dla której jest ta książka\">Klasa</label>\r\n                            <select type=\"text\" name=\"grade\" required >\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"rozszerzony /podstawowy\">Poziom</label>\r\n                            <select type=\"text\" name=\"level\" required>\r\n                                <option value=\"podstawa\">podstawa</option>\r\n                                <option value=\"rozszerzenie\">rozszerzenie</option>\r\n                                <option value=\"SL\">SL</option>\r\n                                <option value=\"HL\">HL</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"podręcznik /zeszyt-ćwiczeń /inne\">Typ</label>\r\n                            <select type=\"text\" name=\"type\" required >\r\n                                <option value=\"podręcznik\">podręcznik</option>\r\n                                <option value=\"zeszyt ćwiczeń\">zeszyt ćwiczeń</option>\r\n                                <option value=\"inne\">inne</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"poziom zniszczenia\">Stan</label>\r\n                            <select type=\"text\" name=\"condition\" required>\r\n                                <option value=\"nowe\">nowe</option>\r\n                                <option value=\"używane - dobra jakość\">używane - dobra jakość</option>\r\n                                <option value=\"ślady używania\">ślady używania</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label title=\"proponowana cena książki\">Cena</label>\r\n                            <p className=\"current-form\">zł</p>\r\n                            <input type=\"number\" step=\"0.01\" name=\"price\" required maxlength=\"6\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"private-part\">\r\n                        <div className=\"form-info\">\r\n                            <div className=\"vertical-line\" />\r\n                            <p className=\"index-form\">INFORMACJE O SPRZEDWCY</p>\r\n                            <div className=\"vertical-line\" />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label>Email <span className=\"bold-label\">SZKOLNY</span></label>\r\n                            <input name=\"email\" type=\"email\" pattern=\".+@lo1\\.gliwice\\.pl\" required maxlength=\"63\" />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <label>Hasło <span className=\"additional\">(potrzebne, aby usunąć ogłoszenie, gdy jest nie ważne)</span></label>\r\n                            <input name=\"password\" type=\"password\" required minlength=\"6\" placeholder=\"minimalna długość: 6\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-row\">\r\n                        <button onClick={() => setVisible(false)} className=\"anuluj\">anuluj</button>\r\n                        <button type=\"submit\" className=\"proceed\">dodaj ogłoszenie</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"add-btn\" onClick={() => setVisible(true)}>\r\n                <p>\r\n                    dodaj ogłoszenie\r\n                </p>\r\n            </button>\r\n            {!visible ? null : <BidForm />}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\components\\BidCard.js",["164","165","166","167"],"import React, { useState, useEffect } from 'react'\r\nimport { Book, Trash2 } from 'react-feather'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nexport default function BidCard({ elementData, idx, filter, bids }) {\r\n    const {\r\n        id,\r\n        password,\r\n        email,\r\n        facebook,\r\n        title,\r\n        level,\r\n        subject,\r\n        year,\r\n        type,\r\n        condition,\r\n        grade,\r\n        publisher,\r\n        price,\r\n    } = elementData\r\n    let currentSubject = subject;\r\n    let img;\r\n\r\n    const BIOLOGY_IMG = \"https://media.springernature.com/w580h326/nature-cms/uploads/collections/FP-Syn-Bio_hero-hi-res-cd49957f1e067a783326b9338ef8a119.jpg\";\r\n    const CHEMISTRY_IMG = \"https://d1ymz67w5raq8g.cloudfront.net/Pictures/460x307//4/1/6/17416_3organicchemistrybackground_619603.jpg\";\r\n    const MATH_IMG = \"https://i.imgur.com/wCQLBPE.png\";\r\n    const HISTORY_IMG = \"https://911821.smushcdn.com/2227390/wp-content/themes/alexander/assets/img/subject-history.jpg\";\r\n    const ENGLISH_IMG = \"https://images.prismic.io/etswebsiteprod/1ece52b2c9683b045136669c4f3ec12e40551446_alphabet-close-up-communication-256417.jpg\";\r\n    const GEOGRAPHY_IMG = \"https://blavida.com/wp-content/uploads/2018/08/History.png\"\r\n    const POLISH_IMG = \"https://ocdn.eu/pulscms-transforms/1/tkTk9kpTURBXy84YmU2YWI0YjI1NzhiYmYwYmI1OWIxMzAyYTRiODc0MS5qcGeSlQMAb80CEc0BKZMFzQMMzQFogaEwBQ\";\r\n    const CS_IMG = \"https://miro.medium.com/max/12032/0*VB5zcgdLaFDP7Fuq\";\r\n    const PHYSICS_IMG = \"https://www.ryerson.ca/content/dam/physics/images/hompage/Department_Physics.jpg\";\r\n    const GERMAN_IMG = \"https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2013/05/06/100710217-100710217-German-flag-storm-clouds.jpg?v=1369768104\";\r\n    const SPANISH_IMG = \"https://www.thoughtco.com/thmb/pc54LSnJZ0d0Buvry1swnr3sIw0=/768x0/filters:no_upscale():max_bytes(150000):strip_icc()/spanish-on-blackboard-596d75c122fa3a00111f7fc9.jpg\";\r\n    const FRENCH_IMG = \"https://edraak-marketing-uploads.edraak.org/Courses/French-Course-Image1%20(1).jpg\";\r\n    const OTHER_IMG = \"https://images.theconversation.com/files/45159/original/rptgtpxd-1396254731.jpg?\";\r\n\r\n    const start = () => {\r\n        switch (currentSubject) {\r\n            case \"biologia\":\r\n                img = BIOLOGY_IMG;\r\n                return;\r\n            case \"chemia\":\r\n                img = CHEMISTRY_IMG;\r\n                return;\r\n            case \"matematyka\":\r\n                img = MATH_IMG;\r\n                return;\r\n            case \"geografia\":\r\n                img = GEOGRAPHY_IMG;\r\n                return;\r\n            case \"fizyka\":\r\n                img = PHYSICS_IMG;\r\n                return;\r\n            case \"historia\":\r\n                img = HISTORY_IMG;\r\n                return;\r\n            case \"informatyka\":\r\n                img = CS_IMG;\r\n                return;\r\n            case \"polski\":\r\n                img = POLISH_IMG;\r\n                return;\r\n            case \"angielski\":\r\n                img = ENGLISH_IMG;\r\n                return;\r\n            case \"francuski\":\r\n                img = FRENCH_IMG;\r\n                return;\r\n            case \"niemiecki\":\r\n                img = GERMAN_IMG;\r\n                return;\r\n            case \"hiszpański\":\r\n                img = SPANISH_IMG;\r\n                return;\r\n            default:\r\n                currentSubject = \"inne\";\r\n                img = OTHER_IMG;\r\n                return;\r\n        }\r\n    }\r\n    start();\r\n\r\n\r\n    const handleDelete = () => {\r\n        const boo = prompt(\"Aby usunąć ofertę musisz podać hasło wybrane przy jej tworzeniu:\");\r\n        if (boo !== null) {\r\n            if (bcrypt.compareSync(boo, password)) {\r\n                let newBids = [];\r\n\r\n                for (let i = 0; i < bids.length; i++) {\r\n                    if (bids[i].id !== id) {\r\n                        newBids.push(bids[i])\r\n                    }\r\n                }\r\n\r\n                if (newBids[0] === undefined) {\r\n                    newBids.push({\r\n                        condition: \"nowe\",\r\n                        email: \"su.lo1.gliwice@gmail.com\",\r\n                        grade: \"2\",\r\n                        id: \"000000000\",\r\n                        id2: \"$2a$10$PZPvxKCX4iX22B.4q6CKG.\",\r\n                        level: \"rozszerzenie\",\r\n                        password: \"$2a$10$PZPvxKCX4iX22B.4q6CKG.wE/vkTrjXCT9pBGdBL3W7YmrXB8o4ey\",\r\n                        price: \"NaN\",\r\n                        publisher: \"Mikołaj Mrózek\",\r\n                        subject: \"informatyka\",\r\n                        title: \"serwis kiermaszowy\",\r\n                        type: \"inne\",\r\n                        year: \"2021\",\r\n                    })\r\n                }\r\n\r\n                let req = new XMLHttpRequest();\r\n                req.onreadystatechange = () => {\r\n                    if (req.readyState == XMLHttpRequest.DONE) {\r\n                        // console.log(req.responseText);\r\n                    }\r\n                };\r\n                req.open(\"PUT\", \"https://api.jsonbin.io/b/60ca2f468ea8ec25bd0e4f89\", true);\r\n                req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                req.setRequestHeader(\"X-Master-Key\", \"$2b$10$VYoFNtra2PIuna0hMpGDbOgI/YUNCLp7.Itnsabe75rtXjSJ83b7K\");\r\n                req.send(JSON.stringify(newBids));\r\n\r\n\r\n                alert(\"Oferta usunięta. Odśwież stronę, aby zobaczyć zmiany.\")\r\n            } else {\r\n                alert(\"Niepoprawne hasło!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    if (filter.length === 0 || filter.includes(currentSubject)) {\r\n        return (\r\n            <div className=\"bid-card\">\r\n                <div className=\"delete\" onClick={() => handleDelete()}>\r\n                    <Trash2 size={24} color=\"#ff000d\" className=\"trash\" />\r\n                </div>\r\n                <a href={`mailto:${email}`}>\r\n                    <img src={img} alt=\"\" className=\"bid-image\" />\r\n                    <div className=\"bid-info\">\r\n                        <div className=\"bid-top-row\">\r\n                            <div className=\"bid-subject-group\">\r\n                                <Book size={14} className=\"bid-book-icon\" style={{ marginLeft: \"-2px\" }} />\r\n                                <p className=\"bid-subject\">{subject}</p>\r\n                            </div>\r\n                            <div className=\"bid-grade-group\">\r\n                                <p className=\"bid-grade\">klasa {grade}</p>\r\n                                <p classname=\"bid-level\">&nbsp;· {level}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bid-middle-row\">\r\n                            <p className=\"bid-title\" title={title}>{title}</p>\r\n                            <p className=\"bid-other\">Wydanie: &nbsp;<span className=\"bid-infoo\">{publisher} - {year} rok</span></p>\r\n                            <p className=\"bid-other\">Typ: &nbsp;<span className=\"bid-infoo\">{type}</span></p>\r\n                            <p className=\"bid-other\">Stan: &nbsp;<span className=\"bid-infoo\">{condition}</span></p>\r\n                        </div>\r\n                        <div className=\"bid-bottom-row\">\r\n                            <div className=\"bid-email-group\">\r\n                                <p className=\"bid-email-label\">kontakt mailowy:</p>\r\n                                <p className=\"bid-email\" title={email}>{email}</p>\r\n                            </div>\r\n                            <div className=\"bid-price-group\">\r\n                                <p classname=\"bid-price-label\">cena:</p>\r\n                                <p className=\"bid-price\">\r\n                                    {price}\r\n                                    <span className=\"bid-price-current\">zł</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\Voting.js",["168","169","170","171","172","173"],"import { useState, useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport BeforeTime from './components/BeforeTime'\r\nimport BeforeVoting from './components/BeforeVoting'\r\nimport DuringVoting from './components/DuringVoting'\r\nimport AfterVoting from './components/AfterVoting'\r\nimport AfterTime from './components/AfterTime'\r\nimport { baseApiLink } from './commonData';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { getResults } from './firebase';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst colorScheme = {\r\n  primary: \"#e6710b\",\r\n  secondary: \"\",\r\n  bgPage: \"#f5a21c\",\r\n  bgCard: \"#FAFAFA\",\r\n  header: \"#111111\",\r\n  description: \"#666666\"\r\n}\r\n\r\nconst Voting = () => {\r\n  const [colors, setColors] = useState(colorScheme)\r\n  const [currentCard, setCurrentCard] = useState(\"before-time\")\r\n  const [token, setToken] = useState();\r\n  const [settings, setSettings] = useState({ startTime: { _seconds: 16325877560 }, endTime: { _seconds: 163258775600 } });\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [message, setMessage] = useState(\"\");\r\n  const [waitingForServer, setWaitingForServer] = useState(false);\r\n  useEffect(() => {\r\n\r\n\r\n    // console.log(\"DOWNLOADING\");\r\n    fetch(baseApiLink + \"/settings\").then(response => response.json()).then(data => {\r\n      if (data.startTime !== undefined && data.endTime !== undefined) {\r\n        setSettings(data);\r\n        setLoaded(true);\r\n      }\r\n\r\n    })\r\n\r\n    setWaitingForServer(true);\r\n    getResults(callback);\r\n  }, [])\r\n  const callback = (credentials, user) => {\r\n    if (credentials !== undefined && user !== undefined) {\r\n      if (user.email.endsWith(\"@lo1.gliwice.pl\")) {\r\n\r\n        fetch(baseApiLink + \"/ableToVote\", {\r\n          method: \"get\",\r\n          headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + credentials.idToken\r\n          })\r\n        }).then(response => {\r\n          if (response.status === 200) {\r\n            setCurrentCard(\"during-voting\");\r\n            setWaitingForServer(false);\r\n            setToken(credentials.idToken);\r\n\r\n          } else {\r\n            setCurrentCard(\"after-voting\");\r\n            setWaitingForServer(false);\r\n            setMessage(\"Możesz oddać tylko jeden głos!\");\r\n\r\n          }\r\n\r\n        })\r\n\r\n      }\r\n      else {\r\n        setWaitingForServer(false);\r\n        // console.log(\"to nie email szkolny\");\r\n        alert(\"Musisz zalogować się z maila szkolnego! Domena: *@lo1.gliwice.pl\")\r\n      }\r\n    }\r\n    setWaitingForServer(false);\r\n\r\n\r\n  }\r\n  return (\r\n    <div style={{ backgroundColor: colors.bgPage }} className=\"background\">\r\n      <main className=\"mainer\" style={{ backgroundColor: colors.bgCard }}>\r\n        <div className=\"upper-row\" style={{ backgroundColor: colors.bgPage }} />\r\n        <div className=\"center\" style={{ padding: \"20px 20px 15px 20px\", position: \"relative\" }}>\r\n          <h1 className=\"h1\" style={{ color: colors.header }}>\r\n            Głosowanie na Marszałka\r\n          </h1>\r\n          <h2 style={{ color: colors.description }} className=\"h2\">\r\n            I Liceum Ogółnokształcące w Gliwicach\r\n          </h2>\r\n          {\r\n            !loaded || waitingForServer ? <div style={{ margin: \"40px\" }}><Loader type=\"Bars\" color={colors.primary} height={40} width={40} /></div> :\r\n              currentCard === \"before-time\" ?\r\n                <BeforeTime colors={colors} changeCard={setCurrentCard} endDate={settings.startTime._seconds * 1000} /> :\r\n                currentCard === \"before-voting\" ?\r\n                  <BeforeVoting colors={colors} changeCard={setCurrentCard} endDate={settings.endTime._seconds * 1000} /> :\r\n                  currentCard === \"during-voting\" ?\r\n                    <DuringVoting colors={colors} changeCard={setCurrentCard} endDate={settings.endTime._seconds * 1000} token={token} setMessage={setMessage} /> :\r\n                    currentCard === \"after-voting\" ?\r\n                      <AfterVoting colors={colors} changeCard={setCurrentCard} endDate={settings.endTime._seconds * 1000} message={message} /> :\r\n                      currentCard === \"after-time\" ?\r\n                        <AfterTime colors={colors} /> :\r\n                        <p>WTF</p>\r\n          }\r\n          <p className=\"signed\" style={{ color: colors.description }}>{'By: Maciuga Adam & Mrózek Mikołaj'}</p>\r\n        </div>\r\n\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Voting;\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\commonData.js",[],"C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\firebase.js",["174","175","176","177","178"],"import {getAuth,signInWithPopup, signInWithRedirect,getRedirectResult,GoogleAuthProvider} from \"firebase/auth\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCCv5PUbHX-1hOEy9k9VkzXojUwwcUrZHY\",\r\n    authDomain: \"voting-lo1.firebaseapp.com\",\r\n    projectId: \"voting-lo1\",\r\n    storageBucket: \"voting-lo1.appspot.com\",\r\n    messagingSenderId: \"714845131798\",\r\n    appId: \"1:714845131798:web:cb5ab97c025d58bc14d137\",\r\n    measurementId: \"G-ZYPXMPLL90\"\r\n};\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst provider = new GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport const signInWithGoogle = (callback) => {\r\n    signInWithRedirect(auth, provider)\r\n    \r\n};\r\nexport const getResults = (callback)=>{\r\n    getRedirectResult(auth)\r\n  .then((result) => {\r\n      console.log(\"hi\");\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n    callback(credential, result.user);\r\n    // ...\r\n    }).catch((error) => {\r\n        callback(undefined,undefined);\r\n        console.log(error);\r\n    // Handle Errors here.\r\n    \r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The AuthCredential type that was used.\r\n    const credential = GoogleAuthProvider.credentialFromError(error);\r\n    // ...\r\n    \r\n  });     \r\n};","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\BeforeTime.jsx",["179","180"],"import { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nconst BeforeTime = ({ colors, changeCard ,endDate}) => {\r\n\r\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n            changeCard(\"before-voting\");\r\n            return <span>Można głosować!</span>;\r\n        } else {\r\n            return (\r\n                <p>\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{days}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>dni</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{hours}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>godzin</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{minutes}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>minut</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{seconds}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>sekund</span>\r\n                </p>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"center\" style={{ width: \"100%\", maxWidth: \"100%\", marginBottom: \"5px\" }}>\r\n            <div className=\"dummy center\">\r\n                <p>\r\n                    tutaj będzie można oddać głos po rozpoczęciu głosowania\r\n                </p>\r\n            </div>\r\n            <p className=\"countdown-label\" style={{ color: colors.header }}>Do głosowania pozostało:</p>\r\n            <Countdown\r\n                date={endDate}\r\n                renderer={renderer}\r\n                onComplete={() => changeCard(\"before-voting\")}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BeforeTime;\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\AfterVoting.jsx",["181","182","183"],"import { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst AfterVoting = ({ colors, changeCard, endDate, message, waitingForServer }) => {\r\n\r\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n            changeCard(\"after-time\");\r\n            return <span>Zakończono głosowanie!</span>;\r\n        } else {\r\n            return (\r\n                <p>\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{days}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>dni</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{hours}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>godzin</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{minutes}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>minut</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{seconds}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>sekund</span>\r\n                </p>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"center\" style={{ width: \"100%\", maxWidth: \"100%\", marginBottom: \"5px\" }}>\r\n\r\n            <div className=\"dummy center\" style={{ height: \"100px\" }}>\r\n                {waitingForServer ? <Loader type=\"Bars\" color={colors.primary} height={40} width={40} /> : <p>\r\n                    {message}\r\n                </p>}\r\n            </div>\r\n            <div className=\"center\" style={{ width: \"95%\" }}>\r\n                <p className=\"support-text\">Możesz wspomóc nasz rozwój stawiając nam kawę, oraz dodając w wiadomości: 'suilo głosowanie'</p>\r\n                <a href=\"https://buycoffee.to/mikixm\" target=\"_blank\">\r\n                    <img src=\"https://buycoffee.to/btn/buycoffeeto-btn-primary.svg\" style={{ width: \"150px\" }} alt=\"Postaw mi kawę na buycoffee.to\" />\r\n                </a>\r\n            </div>\r\n\r\n            <p className=\"countdown-label\" style={{ color: colors.header }}>Do zakończenia głosowania pozostało:</p>\r\n            <Countdown\r\n                date={endDate}\r\n                renderer={renderer}\r\n                onComplete={() => changeCard(\"after-time\")}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AfterVoting;\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\BeforeVoting.jsx",["184"],"import { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport \"../styles/App.css\"\r\nimport {signInWithGoogle} from \"../firebase\";\r\nimport { baseApiLink } from \"../commonData\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst BeforeVoting = ({ colors, changeCard, endDate }) => {\r\n    const [voteCount, setVoteCount] = useState(0);\r\n    const [mostVotesClass, setMostVotesClass] = useState(\"\");\r\n    const [waitingForServer,setWaitingForServer] = useState(false);\r\n    useEffect(() => {\r\n        fetch(baseApiLink + \"/votes/count\").then(response => response.json()).then(data => {\r\n            setVoteCount(data.total);\r\n            setMostVotesClass(data.classes.sort((a, b) => b.numberOfVotes - a.numberOfVotes)[0]?.class)\r\n        })\r\n    }, [])\r\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n            changeCard(\"after-voting\");\r\n            return <span>Zakończono głosowanie!</span>;\r\n        } else {\r\n            return (\r\n                <p>\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{days}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>dni</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{hours}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>godzin</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{minutes}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>minut</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{seconds}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>sekund</span>\r\n                </p>\r\n            );\r\n        }\r\n    };\r\n   \r\n    const _handleLogIn = () => {\r\n        signInWithGoogle();\r\n    }\r\n\r\n    return (\r\n        <div className=\"center\" style={{ width: \"100%\", maxWidth: \"100%\", marginBottom: \"5px\" }}>\r\n            {waitingForServer?<Loader type=\"Bars\" color={colors.primary} height={40} width={40} />:\r\n            <div className=\"voting-info center\">\r\n            <div className=\"voting-spec-info center\">\r\n                {/* <h3 style={{ color: colors.header }} style={{ margin: 0, padding: 0 }}>\r\n                    Głosowanie otwarte!\r\n                </h3> */}\r\n                <h4 style={{ color: colors.primary }}>\r\n                    <span style={{ color: colors.description }}>oddano </span>{voteCount}&nbsp;<span style={{ color: colors.description }}>głosów łącznie{mostVotesClass && \",\"}</span>\r\n                </h4>\r\n                {\r\n                    mostVotesClass && <h4 style={{ color: colors.primary }}>\r\n                        <span style={{ color: colors.description }}>a </span>{mostVotesClass || \"X\"}&nbsp;<span style={{ color: colors.description }}>to klasa z najwyższą frekwencją</span>\r\n                    </h4>\r\n                }\r\n\r\n            </div>\r\n            <button\r\n                className=\"vote-btn\"\r\n                onClick={() => _handleLogIn()}\r\n                style={{ backgroundColor: colors.primary, color: 'white' }}\r\n            >\r\n                <p className=\"btn-label\">Zagłosuj!</p>\r\n            </button>\r\n            <p className=\"warning\" style={{ color: \"tomato\" }}>Aby wziąć udział w głosowaniu <b>musisz</b> zalogować się poprzez <b>maila szkolnego</b></p>\r\n        </div>\r\n            }\r\n            \r\n            <p className=\"countdown-label\" style={{ color: colors.header }}>Do zakończenia głosowania pozostało:</p>\r\n            <Countdown\r\n                date={endDate}\r\n                renderer={renderer}\r\n                onComplete={() => changeCard(\"after-time\")}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BeforeVoting;\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\AfterTime.jsx",["185"],"import { useState, useEffect } from \"react\";\r\nimport { baseApiLink } from \"../commonData\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst AfterTime = ({ colors, changeCard }) => {\r\n    const [votes, setVotes] = useState([]);\r\n    const [waitingForServer, setWaitingForServer] = useState(false);\r\n    const [specialMessage, setSpecialMessage] = useState(\"\");\r\n    useEffect(() => {\r\n        setWaitingForServer(true);\r\n        fetch(baseApiLink + \"/votes\").then(response => response.json()).then(data => {\r\n            if (data.errorMessage === undefined) {\r\n                setVotes(data.sort((a, b) => b.votes - a.votes));\r\n\r\n            } else {\r\n                setSpecialMessage(data.errorMessage);\r\n            }\r\n            setWaitingForServer(false);\r\n        })\r\n    }, [])\r\n    const _createCandidateDisplay = (candidate) => {\r\n        return <p key={candidate.fullName}>{candidate.fullName} zdobył {candidate.votes} głosów</p>;\r\n    }\r\n    return (\r\n        <p>\r\n            {waitingForServer ? <Loader type=\"Bars\" color={colors.primary} height={40} width={40} /> :\r\n                specialMessage !== \"\" ? specialMessage :\r\n                    votes.map(_createCandidateDisplay)}\r\n            <div className=\"center\" style={{ width: \"95%\" }}>\r\n                <p className=\"support-text\">Możesz wspomóc nasz rozwój stawiając nam kawę, oraz dodając w wiadomości: 'suilo głosowanie'</p>\r\n                <a href=\"https://buycoffee.to/mikixm\" target=\"_blank\">\r\n                    <img src=\"https://buycoffee.to/btn/buycoffeeto-btn-primary.svg\" style={{ width: \"150px\" }} alt=\"Postaw mi kawę na buycoffee.to\" />\r\n                </a>\r\n            </div>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default AfterTime;\r\n","C:\\Users\\MIKOLAJ\\supage\\src\\kill_me\\components\\DuringVoting.jsx",["186","187","188","189"],"import { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { baseApiLink } from \"../commonData\";\r\n\r\n\r\nconst VoteOption = ({ colors, idx, activeIdx, setActiveIdx, id, name, classLabel }) => {\r\n    const [hover, setHover] = useState(false)\r\n    const [color, setColor] = useState(\"rgba(0,0,0,.05)\")\r\n\r\n    useEffect(() => {\r\n        if (activeIdx === idx) {\r\n            setColor(\"rgba(230, 113, 11, .75)\")\r\n        } else {\r\n            setColor(\"rgba(0,0,0,.05)\")\r\n        }\r\n    }, [activeIdx])\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"candidate-box\"\r\n            key={idx}\r\n            // onMouseEnter={() => setHover(true)}\r\n            // onMouseLeave={() => setHover(false)}\r\n            onClick={() => { setActiveIdx(idx) }}\r\n            style={{\r\n                backgroundColor: color\r\n            }}\r\n        >\r\n            <p className=\"candidate-name\">{name}</p>\r\n            <p className=\"candidate-class\" style={{ color: colors.description }}>{classLabel}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst DuringVoting = ({ colors, changeCard, endDate, token, setMessage }) => {\r\n    const [activeIdx, setActiveIdx] = useState(null)\r\n    const [customCandidateId, setCustomCandidateId] = useState(\"\");\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [classNameVoter, setClassNameVoter] = useState(\"1a\");\r\n    const [sexVoter, setSexVoter] = useState(\"kobieta\");\r\n    const [classNameCandidate, setClassNameCandidate] = useState(\"1a\");\r\n    const [additionalCandidateName, setAdditionalCandidateName] = useState(\"\");\r\n    const [waitingForServer, setWaitingForServer] = useState(false);\r\n    useEffect(() => {\r\n        fetch(baseApiLink + \"/candidates?specialShowing=true\").then(response => response.json()).then(data => {\r\n            console.log(data);\r\n            setCandidates(data);\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        let cand = candidates.filter(candidate => candidate.fullName === additionalCandidateName);\r\n        if (cand !== undefined) {\r\n            if (cand[0] !== undefined) {\r\n                setCustomCandidateId(cand[0].id)\r\n                setClassNameCandidate(cand[0].className);\r\n            }\r\n        }\r\n    }, [additionalCandidateName])\r\n    const _handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setWaitingForServer(true);\r\n        let path = \"\";\r\n        let dataToSend = {};\r\n        if (customCandidateId === \"\" && activeIdx === \"CUSTOM\") {\r\n            path = \"/addCandidate\";\r\n            dataToSend = {\r\n                fullName: additionalCandidateName,\r\n                classNameCandidate: classNameCandidate,\r\n                classNameVoter: classNameVoter,\r\n                sex: sexVoter\r\n            };\r\n\r\n        } else {\r\n            path = \"/vote\";\r\n            dataToSend = {\r\n                className: classNameVoter,\r\n                sex: sexVoter,\r\n                submitVote: activeIdx === \"CUSTOM\" ? customCandidateId : activeIdx\r\n            };\r\n        }\r\n        console.log(dataToSend);\r\n        fetch(baseApiLink + path, {\r\n            method: \"post\",\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }),\r\n            body: JSON.stringify(dataToSend)\r\n        }).then(response => response.json()).then(data => {\r\n            if (data.errorMessage === undefined) {\r\n                setMessage(data.message)\r\n\r\n\r\n            }\r\n            else {\r\n                setMessage(data.errorMessage)\r\n            }\r\n            setWaitingForServer(false);\r\n            changeCard(\"after-voting\");\r\n        })\r\n    }\r\n\r\n    const _renderOptions = () => {\r\n        return candidates.filter(candidate => candidate.reachedTreshold === true).map((candidate) => <VoteOption colors={colors} idx={candidate.id} activeIdx={activeIdx} setActiveIdx={setActiveIdx} name={candidate.fullName} classLabel={candidate.className} />)\r\n    }\r\n    const _renderAdditionalOptions = () => {\r\n        return candidates.filter(candidate => candidate.reachedTreshold === false).map((candidate) => <option value={candidate.fullName} key={candidate.fullName} />)\r\n    }\r\n\r\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n            changeCard(\"after-voting\");\r\n            return <span>Zakończono głosowanie!</span>;\r\n        } else {\r\n            return (\r\n                <p>\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{days}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>dni</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{hours}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>godzin</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{minutes}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>minut</span>&nbsp;&nbsp;\r\n                    <span className=\"time-number\" style={{ color: colors.primary }}>{seconds}</span>\r\n                    <span className=\"time-label\" style={{ color: colors.description }}>sekund</span>\r\n                </p>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"center\" style={{ width: \"100%\", maxWidth: \"100%\", marginBottom: \"5px\" }}>\r\n            {waitingForServer ? (\r\n                <>\r\n                    <p>Twój głos jest przesyłany na serwer</p>\r\n                    <div style={{ margin: \"40px\" }}><Loader type=\"Bars\" color={colors.primary} height={40} width={40} /></div>\r\n                </>\r\n            ) : (<form onSubmit={_handleSubmit} className=\"center\" style={{ width: \"100%\" }}>\r\n                {\r\n                    candidates[0] === undefined ? <div style={{ margin: \"40px\" }}><Loader type=\"Bars\" color={colors.primary} height={40} width={40} /></div> :\r\n\r\n                        <div className=\"options center\">\r\n                            {_renderOptions()}\r\n                            <VoteOption colors={colors} idx=\"CUSTOM\" activeIdx={activeIdx} setActiveIdx={setActiveIdx} name=\"WŁASNY\" classLabel=\"KANDYDAT\" />\r\n                        </div>\r\n\r\n\r\n                }\r\n                {\r\n                    activeIdx === \"CUSTOM\" ?\r\n\r\n                        <div className=\"center\" style={{ width: \"100%\", marginTop: \"5px\" }}>\r\n                            <p style={{ color: colors.header }} className=\"additionalinfo\">— Informacje o kandydacie —</p>\r\n                            <div className=\"onerow\" style={{ width: \"94%\" }}>\r\n\r\n                                <div className=\"input-box\" style={{ width: \"100%\", minWidth: \"100px\" }}>\r\n                                    <p style={{ color: colors.description }}>\r\n                                        Imię i nazwisko:\r\n                                    </p>\r\n                                    <input title=\"Możesz wprowadzić tylko imię i nazwisko używając wyłącznie liter występujących w polskim aflabecie\" pattern=\"^[AaĄąBbCcĆćDdEeĘęFfGgHhIiJjKkLlŁłMmNnŃńOoÓóPpRrSsŚśTtUuWwYyZzŹźŻż]+(\\s[AaĄąBbCcĆćDdEeĘęFfGgHhIiJjKkLlŁłMmNnŃńOoÓóPpRrSsŚśTtUuWwYyZzŹźŻż]+)?$\" className=\"def\" list=\"inni-kandydaci\" style={{ color: colors.header, width: \"100%\" }} onChange={(e) => { setAdditionalCandidateName(e.target.value) }} required />\r\n                                    <datalist id=\"inni-kandydaci\" style={{ color: colors.header }}  >\r\n                                        {_renderAdditionalOptions()}\r\n                                    </datalist>\r\n                                </div>\r\n\r\n                                <div className=\"input-box\">\r\n                                    <p style={{ color: colors.description }}>\r\n                                        Klasa:\r\n                                    </p>\r\n                                    <select name=\"classLabel\" id=\"newClassLabel\" style={{ color: colors.header }} className=\"def\" value={classNameCandidate} onChange={(e) => { setClassNameCandidate(e.target.value) }} required>\r\n                                        <option className=\"def\" value=\"1a\">1a</option>\r\n                                        <option className=\"def\" value=\"1b\">1b</option>\r\n                                        <option className=\"def\" value=\"1c\">1c</option>\r\n                                        <option className=\"def\" value=\"1d\">1d</option>\r\n                                        <option className=\"def\" value=\"1e\">1e</option>\r\n                                        <option className=\"def\" value=\"2a\">2a</option>\r\n                                        <option className=\"def\" value=\"2b\">2b</option>\r\n                                        <option className=\"def\" value=\"2c\">2c</option>\r\n                                        <option className=\"def\" value=\"2d\">2d</option>\r\n                                        <option className=\"def\" value=\"2e\">2e</option>\r\n                                        <option className=\"def\" value=\"3ap\">3ap</option>\r\n                                        <option className=\"def\" value=\"3bp\">3bp</option>\r\n                                        <option className=\"def\" value=\"3cp\">3cp</option>\r\n                                        <option className=\"def\" value=\"3dp\">3dp</option>\r\n                                        <option className=\"def\" value=\"3ep\">3ep</option>\r\n                                        <option className=\"def\" value=\"3ag\">3ag</option>\r\n                                        <option className=\"def\" value=\"3bg\">3bg</option>\r\n                                        <option className=\"def\" value=\"3cg\">3cg</option>\r\n                                        <option className=\"def\" value=\"3dg\">3dg</option>\r\n                                        <option className=\"def\" value=\"3eg\">3eg</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        : null\r\n                }\r\n                <div className=\"center\" style={{ marginTop: \"5px\" }}>\r\n\r\n                    <p style={{ color: colors.header }} className=\"additionalinfo\">— Informacje o głosującym —</p>\r\n\r\n                    <div className=\"onerow\">\r\n                        <div className=\"input-box\">\r\n                            <p style={{ color: colors.description }}>\r\n                                Klasa:\r\n                            </p>\r\n                            <select name=\"classLabel\" className=\"def\" style={{ color: colors.header }} onChange={(e) => setClassNameVoter(e.target.value)} id=\"classLabel\" required>\r\n                                <option className=\"def\" value=\"1a\">1a</option>\r\n                                <option className=\"def\" value=\"1b\">1b</option>\r\n                                <option className=\"def\" value=\"1c\">1c</option>\r\n                                <option className=\"def\" value=\"1d\">1d</option>\r\n                                <option className=\"def\" value=\"1e\">1e</option>\r\n                                <option className=\"def\" value=\"2a\">2a</option>\r\n                                <option className=\"def\" value=\"2b\">2b</option>\r\n                                <option className=\"def\" value=\"2c\">2c</option>\r\n                                <option className=\"def\" value=\"2d\">2d</option>\r\n                                <option className=\"def\" value=\"2e\">2e</option>\r\n                                <option className=\"def\" value=\"3ap\">3ap</option>\r\n                                <option className=\"def\" value=\"3bp\">3bp</option>\r\n                                <option className=\"def\" value=\"3cp\">3cp</option>\r\n                                <option className=\"def\" value=\"3dp\">3dp</option>\r\n                                <option className=\"def\" value=\"3ep\">3ep</option>\r\n                                <option className=\"def\" value=\"3ag\">3ag</option>\r\n                                <option className=\"def\" value=\"3bg\">3bg</option>\r\n                                <option className=\"def\" value=\"3cg\">3cg</option>\r\n                                <option className=\"def\" value=\"3dg\">3dg</option>\r\n                                <option className=\"def\" value=\"3eg\">3eg</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-box\">\r\n                            <p style={{ color: colors.description }}>\r\n                                Płeć:\r\n                            </p>\r\n                            <select name=\"sex\" id=\"sex\" className=\"def\" style={{ color: colors.header }} onChange={(e) => setSexVoter(e.target.value)} required>\r\n                                <option className=\"def\" value=\"kobieta\">kobieta</option>\r\n                                <option className=\"def\" value=\"mezczyzna\">mężczyzna</option>\r\n                                <option className=\"def\" value=\"nie-podawac\">nie chcę podawać</option>\r\n                                <option className=\"def\" value=\"inne\">inne</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    className=\"vote-btn\"\r\n                    type=\"submit\"\r\n                    style={{ backgroundColor: activeIdx === null ? \"rgba(0,0,0,.2)\" : colors.primary, color: 'white' }}\r\n                    disabled={activeIdx === null ? true : false}\r\n                >\r\n                    <p className=\"btn-label\">Oddaj głos!</p>\r\n                </button>\r\n            </form>)}\r\n            <p className=\"countdown-label\" style={{ color: colors.header }}>Do zakończenia głosowania pozostało:</p>\r\n            <Countdown\r\n                date={endDate}\r\n                renderer={renderer}\r\n                onComplete={() => changeCard(\"after-time\")}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuringVoting;\r\n",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":22},{"ruleId":"194","severity":1,"message":"199","line":14,"column":10,"nodeType":"196","messageId":"197","endLine":14,"endColumn":18},{"ruleId":"194","severity":1,"message":"200","line":14,"column":20,"nodeType":"196","messageId":"197","endLine":14,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":31,"column":9,"nodeType":"203","endLine":31,"endColumn":47},{"ruleId":"201","severity":1,"message":"202","line":32,"column":9,"nodeType":"203","endLine":32,"endColumn":55},{"ruleId":"201","severity":1,"message":"202","line":21,"column":21,"nodeType":"203","endLine":21,"endColumn":59},{"ruleId":"201","severity":1,"message":"202","line":22,"column":21,"nodeType":"203","endLine":22,"endColumn":67},{"ruleId":"201","severity":1,"message":"202","line":10,"column":17,"nodeType":"203","endLine":10,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":15,"column":21,"nodeType":"203","messageId":"206","endLine":15,"endColumn":120,"fix":"207"},{"ruleId":"201","severity":1,"message":"202","line":17,"column":29,"nodeType":"203","endLine":17,"endColumn":75},{"ruleId":"204","severity":1,"message":"205","line":21,"column":21,"nodeType":"203","messageId":"206","endLine":21,"endColumn":114,"fix":"208"},{"ruleId":"201","severity":1,"message":"202","line":23,"column":29,"nodeType":"203","endLine":23,"endColumn":74},{"ruleId":"204","severity":1,"message":"205","line":27,"column":21,"nodeType":"203","messageId":"206","endLine":27,"endColumn":171,"fix":"209"},{"ruleId":"201","severity":1,"message":"202","line":29,"column":29,"nodeType":"203","endLine":29,"endColumn":72},{"ruleId":"201","severity":1,"message":"202","line":27,"column":17,"nodeType":"203","endLine":27,"endColumn":63},{"ruleId":"210","severity":1,"message":"211","line":51,"column":8,"nodeType":"212","endLine":51,"endColumn":25,"suggestions":"213"},{"ruleId":"201","severity":1,"message":"202","line":25,"column":21,"nodeType":"203","endLine":25,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":45,"column":21,"nodeType":"203","endLine":45,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":8,"column":17,"nodeType":"203","endLine":8,"endColumn":36},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"214","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":13},{"ruleId":"204","severity":1,"message":"205","line":20,"column":19,"nodeType":"203","messageId":"206","endLine":20,"endColumn":50,"fix":"215"},{"ruleId":"201","severity":1,"message":"202","line":26,"column":34,"nodeType":"203","endLine":26,"endColumn":96},{"ruleId":"201","severity":1,"message":"202","line":27,"column":17,"nodeType":"203","endLine":27,"endColumn":132},{"ruleId":"201","severity":1,"message":"202","line":40,"column":21,"nodeType":"203","endLine":40,"endColumn":41},{"ruleId":"194","severity":1,"message":"216","line":6,"column":12,"nodeType":"196","messageId":"197","endLine":6,"endColumn":19},{"ruleId":"194","severity":1,"message":"217","line":6,"column":21,"nodeType":"196","messageId":"197","endLine":6,"endColumn":31},{"ruleId":"194","severity":1,"message":"218","line":46,"column":13,"nodeType":"196","messageId":"197","endLine":46,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":74,"column":21,"nodeType":"203","endLine":74,"endColumn":40},{"ruleId":"210","severity":1,"message":"219","line":12,"column":8,"nodeType":"212","endLine":12,"endColumn":16,"suggestions":"220"},{"ruleId":"194","severity":1,"message":"200","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"222","line":26,"column":32,"nodeType":"223","messageId":"224","endLine":26,"endColumn":34},{"ruleId":"225","severity":1,"message":"226","line":61,"column":48,"nodeType":"227","messageId":"228","endLine":61,"endColumn":61},{"ruleId":"194","severity":1,"message":"199","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"200","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"229","line":10,"column":9,"nodeType":"196","messageId":"197","endLine":10,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":117,"column":40,"nodeType":"223","messageId":"224","endLine":117,"endColumn":42},{"ruleId":"194","severity":1,"message":"230","line":13,"column":20,"nodeType":"196","messageId":"197","endLine":13,"endColumn":26},{"ruleId":"194","severity":1,"message":"231","line":14,"column":3,"nodeType":"196","messageId":"197","endLine":14,"endColumn":9},{"ruleId":"194","severity":1,"message":"232","line":15,"column":3,"nodeType":"196","messageId":"197","endLine":15,"endColumn":8},{"ruleId":"194","severity":1,"message":"233","line":16,"column":3,"nodeType":"196","messageId":"197","endLine":16,"endColumn":7},{"ruleId":"194","severity":1,"message":"234","line":17,"column":3,"nodeType":"196","messageId":"197","endLine":17,"endColumn":16},{"ruleId":"194","severity":1,"message":"235","line":31,"column":18,"nodeType":"196","messageId":"197","endLine":31,"endColumn":27},{"ruleId":"194","severity":1,"message":"236","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":32},{"ruleId":"194","severity":1,"message":"237","line":35,"column":11,"nodeType":"196","messageId":"197","endLine":35,"endColumn":20},{"ruleId":"194","severity":1,"message":"238","line":36,"column":11,"nodeType":"196","messageId":"197","endLine":36,"endColumn":23},{"ruleId":"194","severity":1,"message":"239","line":38,"column":11,"nodeType":"196","messageId":"197","endLine":38,"endColumn":16},{"ruleId":"194","severity":1,"message":"240","line":40,"column":11,"nodeType":"196","messageId":"197","endLine":40,"endColumn":21},{"ruleId":"194","severity":1,"message":"199","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":18},{"ruleId":"194","severity":1,"message":"200","line":1,"column":20,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"194","severity":1,"message":"199","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":18},{"ruleId":"194","severity":1,"message":"200","line":1,"column":20,"nodeType":"196","messageId":"197","endLine":1,"endColumn":29},{"ruleId":"204","severity":1,"message":"205","line":37,"column":17,"nodeType":"203","messageId":"206","endLine":37,"endColumn":71,"fix":"241"},{"ruleId":"194","severity":1,"message":"242","line":11,"column":29,"nodeType":"196","messageId":"197","endLine":11,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":31,"column":17,"nodeType":"203","messageId":"206","endLine":31,"endColumn":71,"fix":"243"},{"ruleId":"194","severity":1,"message":"244","line":10,"column":12,"nodeType":"196","messageId":"197","endLine":10,"endColumn":17},{"ruleId":"194","severity":1,"message":"245","line":10,"column":19,"nodeType":"196","messageId":"197","endLine":10,"endColumn":27},{"ruleId":"210","severity":1,"message":"246","line":19,"column":8,"nodeType":"212","endLine":19,"endColumn":19,"suggestions":"247"},{"ruleId":"210","severity":1,"message":"248","line":64,"column":8,"nodeType":"212","endLine":64,"endColumn":33,"suggestions":"249"},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'TournamentPage' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"252","text":"253"},{"range":"254","text":"253"},{"range":"255","text":"253"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateBids'. Either include it or remove the dependency array.","ArrayExpression",["256"],"'react' is defined but never used.",{"range":"257","text":"253"},"'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'button' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'action' and 'label'. Either include them or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'facebook' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'setColors' is assigned a value but never used.","'signInWithPopup' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.",{"range":"259","text":"253"},"'setWaitingForServer' is assigned a value but never used.",{"range":"260","text":"253"},"'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idx'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'candidates'. Either include it or remove the dependency array.",["262"],"no-global-assign","no-unsafe-negation",[761,761]," rel=\"noreferrer\"",[1131,1131],[1559,1559],{"desc":"263","fix":"264"},[635,635],{"desc":"265","fix":"266"},[2100,2100],[1544,1544],{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [filter, allBids, generateBids]",{"range":"271","text":"272"},"Update the dependencies array to be: [action, active, label]",{"range":"273","text":"274"},"Update the dependencies array to be: [activeIdx, idx]",{"range":"275","text":"276"},"Update the dependencies array to be: [additionalCandidateName, candidates]",{"range":"277","text":"278"},[1619,1636],"[filter, allBids, generateBids]",[331,339],"[action, active, label]",[638,649],"[activeIdx, idx]",[2350,2375],"[additionalCandidateName, candidates]"]